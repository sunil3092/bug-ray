{"version":3,"sources":["app/models/pagination.ts","api/agent.ts","app/stores/profileStore.ts","app/models/project.ts","app/models/profile.ts","app/stores/projectStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/discussionStore.ts","app/layout/Navbar.tsx","features/project/dashboard/ProjectFilters.tsx","features/profiles/TrackButton.tsx","features/profiles/ProfileCard.tsx","features/project/dashboard/ProjectContributorsList.tsx","features/project/dashboard/ProjectListItem.tsx","features/project/dashboard/ProjectList.tsx","features/project/dashboard/ProjectListItemPlaceholder.tsx","features/project/dashboard/ProjectDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/VaidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LodingComponet.tsx","app/common/form/MyTextArea.tsx","app/common/form/MyDateInput.tsx","features/project/form/ProjectForm.tsx","features/project/effort/EffortListItem.tsx","features/project/effort/EffortList.tsx","features/project/detail/ProjectComments.tsx","features/project/detail/ProjectSidebar.tsx","features/project/detail/ProjectDetailItem.tsx","features/project/detail/ProjectDetail.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","app/common/imageUpload/PhotoUploadDropzone.tsx","app/common/imageUpload/PhotoUploadCropper.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhoto.tsx","features/profiles/ProfileProjects.tsx","features/profiles/ProfileTrackings.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PaginationPrams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","error","Promise","reject","response","a","JSON","parse","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","responseBody","requests","url","get","then","body","post","put","delete","agent","Projects","list","params","details","id","create","project","update","contribute","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateTracking","listTrackings","predicate","listProjects","ProfileStore","loadingProfile","uploading","loading","trackings","loadingTrackings","activeTab","userProjects","loadingProjects","setActiveTab","loadProfile","runInAction","console","log","photo","photos","isMain","userStore","setImage","image","find","p","filter","displayName","setDisplayName","tracking","projectStore","updateContributorTracking","trackingCount","trackedCount","forEach","loadTrackings","loadUserProjects","activities","makeAutoObservable","reaction","Project","init","Object","assign","ProjectFormValues","undefined","name","description","estimate","isFavourate","Profile","ProjectStore","projectRegistry","Map","selectedProject","editMode","lodaingInital","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","loadProjects","setLoadingInital","axiosParams","result","setProject","setPagination","loadProject","getProject","isContributing","contributors","some","isOwner","hostUsername","owner","x","Date","state","createProject","contributor","newProject","updateProject","updatedProject","deleteProject","updateContribution","cancelProjectToggle","isCancelled","clearSelectedProject","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","projectsByDate","reduce","projects","date","format","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","getItem","appLoaded","setAppLoaded","parseJwt","base64","split","replace","atob","setItem","modal","open","openModal","content","profileStore","discussionStore","discssions","hubConnection","createHubConnection","projectId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","discussions","discussion","createdAt","stopHubConnection","stop","clearDiscussion","addDiscussion","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","size","Container","Item","as","NavLink","to","className","exact","Icon","Button","positive","position","Image","src","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","active","has","onChange","Reveal","animated","Content","visible","style","width","fluid","color","hidden","basic","e","preventDefault","handleTracking","Card","Header","Description","str","length","substring","truncate","bio","extra","List","horizontal","map","Popup","hoverable","trigger","circular","Segment","Group","Label","attached","textAlign","secondary","clearing","floated","groupByEstimate","group","divided","ProjectListItemPlaceholder","Placeholder","marginTop","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Row","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","autoComplete","placeholder","type","render","marginBottom","VaidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","vertical","isLoggedIn","centered","bordered","LodingComponet","Dimmer","MyTextArea","MyDateInput","helpers","selected","setValue","useHistory","useParams","nullable","sub","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","EffortListItem","Meta","EffortList","itemsPerRow","Comment","margin","padding","tertiary","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","resetForm","porps","onKeyPress","shiftKey","ProjectSidebar","TestError","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","PhotoUploadDropzone","setFiles","dzStyles","border","borderColor","borderRadius","paddingTop","height","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadCropper","setCropper","imagePreview","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoUploadWidget","handlePhotoUpload","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","negative","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","track","menuPosition","verticalAlign","Divider","Statistic","Value","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ProjectDashboard","ProjectDetail","ProjectForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.b4039c3e.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PaginationPrams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"..\";\r\nimport { PaginatedResult } from \"../app/models/pagination\";\r\nimport { Photo, Profile, UserProjects } from \"../app/models/profile\";\r\nimport { Project, ProjectFormValues } from \"../app/models/project\";\r\nimport { User, userFormValues } from \"../app/models/user\";\r\nimport { store } from \"../app/stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === \"string\") {\r\n          toast.error(data);\r\n        }\r\n\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"Id\")) {\r\n          history.push(\"/not-found\");\r\n        }\r\n\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error(\"Unauthorised\");\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Projects = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Project[]>>(\"/project\", { params })\r\n      .then(responseBody),\r\n  details: (id: string) => requests.get<Project>(`/project/${id}`),\r\n  create: (project: ProjectFormValues) =>\r\n    requests.post<void>(\"/project\", project),\r\n  update: (project: ProjectFormValues) =>\r\n    requests.put<void>(`/project/${project.id}`, project),\r\n  delete: (id: string) => requests.del<void>(`/project/${id}`),\r\n  contribute: (id: string) =>\r\n    requests.post<void>(`/project/${id}/contribute`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: userFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: userFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  updateTracking: (username: string) =>\r\n    requests.post(`/tracking/${username}`, {}),\r\n  listTrackings: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/tracking/${username}?predicate=${predicate}`),\r\n  listProjects: (username: string, predicate: string) =>\r\n    requests.get<UserProjects[]>(\r\n      `/profiles/${username}/projects?predicate=${predicate}`\r\n    ),\r\n};\r\n\r\nconst agent = {\r\n  Projects,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../../api/agent\";\r\nimport { Photo, Profile, UserProjects } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  trackings: Profile[] = [];\r\n  loadingTrackings: boolean = false;\r\n  activeTab: number = 0;\r\n  userProjects: UserProjects[] = [];\r\n  loadingProjects = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"trackers\" : \"trackings\";\r\n          this.loadTrackings(predicate);\r\n        } else {\r\n          this.trackings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n        }\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n        }\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateTracking = async (username: string, tracking: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateTracking(username);\r\n      store.projectStore.updateContributorTracking(username);\r\n\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          tracking\r\n            ? this.profile.trackingCount++\r\n            : this.profile.trackingCount--;\r\n          this.profile.tracking = !this.profile.tracking;\r\n        }\r\n\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          tracking ? this.profile.trackedCount++ : this.profile.trackedCount--;\r\n        }\r\n\r\n        this.trackings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.tracking\r\n              ? profile.trackingCount--\r\n              : profile.trackingCount++;\r\n            profile.tracking = !profile.tracking;\r\n          }\r\n        });\r\n\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadTrackings = async (predicate: string) => {\r\n    this.loadingTrackings = true;\r\n    try {\r\n      const trackings = await agent.Profiles.listTrackings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.trackings = trackings;\r\n        this.loadingTrackings = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingTrackings = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadUserProjects = async (username: string, predicate?: string) => {\r\n    this.loadingProjects = true;\r\n    try {\r\n      const activities = await agent.Profiles.listProjects(\r\n        username,\r\n        predicate!\r\n      );\r\n      runInAction(() => {\r\n        this.userProjects = activities;\r\n        this.loadingProjects = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingProjects = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Project {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  estimate: Date | null;\r\n  isFavourate: boolean;\r\n  hostUsername: string;\r\n  isCancelled: boolean;\r\n  isContributing: boolean;\r\n  isOwner: boolean;\r\n  owner?: Profile;\r\n  contributors: Profile[];\r\n}\r\n\r\nexport class Project implements Project {\r\n  constructor(init?: ProjectFormValues) {\r\n    //Mapping init object with Project object\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ProjectFormValues {\r\n  id?: string = undefined;\r\n  name: string = \"\";\r\n  description: string = \"\";\r\n  estimate: Date | null = null;\r\n  isFavourate: boolean = false;\r\n\r\n  constructor(project?: ProjectFormValues) {\r\n    if (project) {\r\n      this.id = project.id;\r\n      this.name = project.name;\r\n      this.description = project.description;\r\n      this.estimate = project.estimate;\r\n      this.isFavourate = project.isFavourate;\r\n    }\r\n  }\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  trackingCount: number;\r\n  trackedCount: number;\r\n  tracking: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserProjects {\r\n  id: string;\r\n  name: string;\r\n  estimate: Date;\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../../api/agent\";\r\nimport { Project, ProjectFormValues } from \"../models/project\";\r\nimport { format } from \"date-fns\";\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { Pagination, PaginationPrams } from \"../models/pagination\";\r\n\r\nexport default class ProjectStore {\r\n  projectRegistry = new Map<string, Project>();\r\n  selectedProject: Project | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  lodaingInital = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PaginationPrams();\r\n  predicate = new Map().set(\"all\", true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PaginationPrams();\r\n        this.projectRegistry.clear();\r\n        this.loadProjects();\r\n      }\r\n    );\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PaginationPrams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () =>\r\n      this.predicate.forEach((value, key) => {\r\n        //Remove this for Date freedom\r\n        //if (key !== \"estimate\")\r\n        this.predicate.delete(key);\r\n      });\r\n    switch (predicate) {\r\n      case \"all\":\r\n        resetPredicate();\r\n        this.predicate.set(\"all\", true);\r\n        break;\r\n      case \"isOwner\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isOwner\", true);\r\n        break;\r\n      case \"isContributing\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isContributing\", true);\r\n        break;\r\n      case \"estimate\":\r\n        resetPredicate();\r\n        this.predicate.delete(\"estimate\");\r\n        this.predicate.set(\"estimate\", value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"estimate\") {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  get projectsByDate() {\r\n    return Array.from(this.projectRegistry.values()).sort(\r\n      (a, b) => a.estimate!.getTime() - b.estimate!.getTime()\r\n    );\r\n  }\r\n\r\n  //Study Again\r\n  get groupByEstimate() {\r\n    return Object.entries(\r\n      this.projectsByDate.reduce((projects, project) => {\r\n        const date = format(project.estimate!, \"dd MMM yyyy\");\r\n        projects[date] = projects[date]\r\n          ? [...projects[date], project]\r\n          : [project];\r\n        return projects;\r\n      }, {} as { [key: string]: Project[] })\r\n    );\r\n  }\r\n\r\n  loadProjects = async () => {\r\n    this.setLoadingInital(true);\r\n    try {\r\n      const result = await agent.Projects.list(this.axiosParams);\r\n      result.data.forEach((project) => {\r\n        this.setProject(project);\r\n      });\r\n      runInAction(() => {\r\n        this.setPagination(result.pagination);\r\n        this.setLoadingInital(false);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.setLoadingInital(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  loadProject = async (id: string) => {\r\n    let project = this.getProject(id);\r\n    if (project) {\r\n      this.selectedProject = project;\r\n      return project;\r\n    } else {\r\n      this.lodaingInital = true;\r\n      try {\r\n        project = await agent.Projects.details(id);\r\n        this.setProject(project);\r\n        runInAction(() => {\r\n          this.selectedProject = project;\r\n        });\r\n        this.setLoadingInital(false);\r\n        return project;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInital(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  //Helper Method\r\n  private setProject = (project: Project) => {\r\n    const user = store.userStore.user;\r\n\r\n    //Flag the is Contributing by using current user username to see if the user is contributing.\r\n    if (user) {\r\n      project.isContributing = project.contributors!.some(\r\n        (p) => p.username === user.username\r\n      );\r\n      //Set if its the owner\r\n      project.isOwner = project.hostUsername === user.username;\r\n      project.owner = project.contributors?.find(\r\n        (x) => x.username === project.hostUsername\r\n      );\r\n    }\r\n    project.estimate = new Date(project.estimate!);\r\n    this.projectRegistry.set(project.id, project);\r\n  };\r\n\r\n  //Helper Method\r\n  private getProject = (id: string) => {\r\n    return this.projectRegistry.get(id);\r\n  };\r\n\r\n  setLoadingInital = (state: boolean) => {\r\n    this.lodaingInital = state;\r\n  };\r\n\r\n  createProject = async (project: ProjectFormValues) => {\r\n    const user = store.userStore.user;\r\n    const contributor = new Profile(user!);\r\n    try {\r\n      await agent.Projects.create(project);\r\n      const newProject = new Project(project);\r\n      newProject.hostUsername = user!.username;\r\n      newProject.contributors = [contributor];\r\n      this.setProject(newProject);\r\n      runInAction(() => {\r\n        this.selectedProject = newProject;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateProject = async (project: ProjectFormValues) => {\r\n    try {\r\n      await agent.Projects.update(project);\r\n      runInAction(() => {\r\n        if (project.id) {\r\n          let updatedProject = { ...this.getProject(project.id), ...project };\r\n          this.projectRegistry.set(project.id, updatedProject as Project);\r\n          this.selectedProject = updatedProject as Project;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deleteProject = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Projects.delete(id);\r\n      runInAction(() => {\r\n        this.projectRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateContribution = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Projects.contribute(this.selectedProject!.id);\r\n      runInAction(() => {\r\n        if (this.selectedProject?.isContributing) {\r\n          this.selectedProject.contributors = this.selectedProject.contributors?.filter(\r\n            (a) => a.username !== user?.username\r\n          );\r\n          this.selectedProject.isContributing = false;\r\n        } else {\r\n          const contributor = new Profile(user!);\r\n          this.selectedProject?.contributors?.push(contributor);\r\n          this.selectedProject!.isContributing = true;\r\n        }\r\n\r\n        this.projectRegistry.set(\r\n          this.selectedProject!.id,\r\n          this.selectedProject!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  cancelProjectToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Projects.contribute(this.selectedProject!.id);\r\n      runInAction(() => {\r\n        this.selectedProject!.isCancelled = !this.selectedProject?.isCancelled;\r\n        this.projectRegistry.set(\r\n          this.selectedProject!.id,\r\n          this.selectedProject!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  clearSelectedProject = () => {\r\n    this.selectedProject = undefined;\r\n  };\r\n\r\n  updateContributorTracking = (username: string) => {\r\n    this.projectRegistry.forEach((project) => {\r\n      project.contributors.forEach((contributor) => {\r\n        if (contributor.username === username) {\r\n          contributor.tracking\r\n            ? contributor.trackingCount--\r\n            : contributor.trackingCount++;\r\n          contributor.tracking = !contributor.tracking;\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../../api/agent\";\r\nimport { User, userFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: userFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n      history.push(\"/projects\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  register = async (creds: userFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n      history.push(\"/projects\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) {\r\n      this.user.image = image;\r\n    }\r\n  };\r\n\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport CommonStore from \"./commonStore\";\r\nimport DiscussionStore from \"./discussionStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport ProjectStore from \"./projectStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  projectStore: ProjectStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  discussionStore: DiscussionStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  projectStore: new ProjectStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  discussionStore: new DiscussionStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem(\"jwt\");\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n\r\n  parseJwt = (token: string) => {\r\n    if (!token) {\r\n      return;\r\n    }\r\n    const base64Url = token.split(\".\")[1];\r\n    const base64 = base64Url.replace(\"-\", \"+\").replace(\"_\", \"/\");\r\n    return JSON.parse(window.atob(base64));\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { Discussion } from \"../models/discussion\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class DiscussionStore {\r\n  discssions: Discussion[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (projectId: string) => {\r\n    if (store.projectStore.selectedProject) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(\r\n          process.env.REACT_APP_DISCUSSION_URL + \"?projectId=\" + projectId,\r\n          {\r\n            accessTokenFactory: () => store.userStore.user?.token!,\r\n          }\r\n        )\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch((error) =>\r\n          console.log(\"Error establising connection: \" + error)\r\n        );\r\n\r\n      this.hubConnection.on(\"LoadDiscussions\", (discussions: Discussion[]) => {\r\n        runInAction(() => {\r\n          discussions.forEach((discussion) => {\r\n            discussion.createdAt = new Date(discussion.createdAt + \"Z\");\r\n          });\r\n          this.discssions = discussions;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"ReceiveDiscussion\", (discussion: Discussion) => {\r\n        runInAction(() => {\r\n          discussion.createdAt = new Date(discussion.createdAt);\r\n          this.discssions.push(discussion);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((error) => console.log(\"Problem Stopping Connection: \" + error));\r\n  };\r\n\r\n  clearDiscussion = () => {\r\n    this.discssions = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addDiscussion = async (values: any) => {\r\n    values.projectId = store.projectStore.selectedProject!.id;\r\n    try {\r\n      await this.hubConnection!.invoke(\"SendDiscussion\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Menu,\r\n  Image,\r\n  Dropdown,\r\n  Container,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nconst Navbar = () => {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Menu inverted fixed=\"top\" size=\"huge\">\r\n      <Container>\r\n        <Menu.Item\r\n          name=\"Bug-Ray\"\r\n          as={NavLink}\r\n          to=\"/\"\r\n          className=\"whiteGlow\"\r\n          exact\r\n        >\r\n          <Icon name=\"bug\" />\r\n          Bug-Ray\r\n        </Menu.Item>\r\n        <Menu.Item name=\"Projects\" as={NavLink} to=\"/projects\" />\r\n        <Menu.Item name=\"Errors\" as={NavLink} to=\"/errors\" />\r\n        <Menu.Item>\r\n          <Button\r\n            positive\r\n            content=\"Add Project\"\r\n            as={NavLink}\r\n            to=\"/createProject\"\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image\r\n            src={user?.image || \"/assets/user.png\"}\r\n            avatar\r\n            spaced=\"right\"\r\n          />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profile/${user?.username}`}\r\n                text=\"Profile\"\r\n                icon=\"user\"\r\n              />\r\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default observer(Navbar);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Dropdown, Icon, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst ProjectFilters = () => {\r\n  const {\r\n    projectStore: { predicate, setPredicate },\r\n  } = useStore();\r\n\r\n  return (\r\n    <>\r\n      <Menu>\r\n        <Menu.Item>\r\n          <Icon className=\"filter\" />\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        >\r\n          All\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          active={predicate.has(\"isOwner\")}\r\n          onClick={() => setPredicate(\"isOwner\", \"true\")}\r\n        >\r\n          Owner\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          active={predicate.has(\"isContributing\")}\r\n          onClick={() => setPredicate(\"isContributing\", \"true\")}\r\n        >\r\n          Contributing\r\n        </Menu.Item>\r\n        <Dropdown text=\"By Date\" pointing=\"left\" className=\"link item\">\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item>\r\n              <Calendar\r\n                onChange={(date) => setPredicate(\"estimate\", date as Date)}\r\n                value={predicate.get(\"estimate\" || new Date())}\r\n              />\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectFilters);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst TrackButton = ({ profile }: Props) => {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateTracking, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function handleTracking(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.tracking\r\n      ? updateTracking(username, false)\r\n      : updateTracking(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"blue\"\r\n          content={profile.tracking ? \"Tracking\" : \"Not Tracking\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.tracking ? \"red\" : \"green\"}\r\n          content={profile.tracking ? \"Untrack\" : \"Track\"}\r\n          loading={loading}\r\n          onClick={(e) => handleTracking(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n};\r\n\r\nexport default observer(TrackButton);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport TrackButton from \"./TrackButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfileCard = ({ profile }: Props) => {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card as={Link} to={`/profile/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.trackingCount} Trackers\r\n      </Card.Content>\r\n      <TrackButton profile={profile} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileCard);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  contributors: Profile[];\r\n}\r\n\r\nconst ProjectContributorsList = ({ contributors }: Props) => {\r\n  return (\r\n    <List horizontal>\r\n      {contributors.map((contributor) => (\r\n        <Popup\r\n          size=\"mini\"\r\n          key={contributor.username}\r\n          hoverable\r\n          trigger={\r\n            <List.Item\r\n              key={contributor.username}\r\n              as={Link}\r\n              to={`/profile/${contributor.username}`}\r\n            >\r\n              <Image\r\n                size=\"mini\"\r\n                className={contributor.tracking ? \"blueGlow\" : \"\"}\r\n                circular\r\n                src={contributor.image || \"/assets/user.png\"}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={contributor} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectContributorsList);\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Project } from \"../../../app/models/project\";\r\nimport ProjectContributorsList from \"./ProjectContributorsList\";\r\n\r\ninterface props {\r\n  project: Project;\r\n}\r\n\r\nconst ProjectListItem = ({ project }: props) => {\r\n  // const { projectStore } = useStore();\r\n\r\n  // const { deleteProject, loading } = projectStore;\r\n\r\n  // const [target, setTarget] = useState(\"\");\r\n\r\n  // function handleProjectDelete(\r\n  //   e: SyntheticEvent<HTMLButtonElement>,\r\n  //   id: string\r\n  // ) {\r\n  //   setTarget(e.currentTarget.name);\r\n  //   deleteProject(id);\r\n  // }\r\n\r\n  return (\r\n    <Segment.Group className={project.isCancelled ? \"redGlow\" : \"\"}>\r\n      <Segment>\r\n        {project.isCancelled && (\r\n          <Label\r\n            attached=\"top\"\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              size=\"tiny\"\r\n              circular\r\n              src={project.owner?.image || \"/assets/user.png\"}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as=\"a\">{project.name}</Item.Header>\r\n              <Item.Description>\r\n                Owned by{\" \"}\r\n                <Link to={`/profile/${project.hostUsername}`}>\r\n                  {project.owner?.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <Icon name=\"clock\" /> Estimate end{\" \"}\r\n        {format(project.estimate!, \"do MMMM yyyy\")}\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ProjectContributorsList contributors={project.contributors!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{project.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/projects/${project.id}`}\r\n          floated=\"right\"\r\n          content=\"View\"\r\n          color=\"blue\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectListItem);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Item, Label } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ProjectListItem from \"./ProjectListItem\";\r\n\r\nconst ProjectList = () => {\r\n  const { projectStore } = useStore();\r\n\r\n  const { groupByEstimate } = projectStore;\r\n\r\n  return (\r\n    <>\r\n      {groupByEstimate.map(([group, projects]) => (\r\n        <Fragment key={group}>\r\n          <Label size=\"large\" color=\"blue\">\r\n            {/* {format(group, 'eeee do MMMM')} */}\r\n            {group}\r\n          </Label>\r\n          <Item.Group divided>\r\n            {projects.map((project) => (\r\n              <ProjectListItem key={project.id} project={project} />\r\n            ))}\r\n          </Item.Group>\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectList);\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, Placeholder, Segment } from \"semantic-ui-react\";\r\n\r\nconst ProjectListItemPlaceholder = () => {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectListItemPlaceholder;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PaginationPrams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ProjectFilters from \"./ProjectFilters\";\r\nimport ProjectList from \"./ProjectList\";\r\nimport ProjectListItemPlaceholder from \"./ProjectListItemPlaceholder\";\r\n\r\nconst ProjectDashboard = () => {\r\n  const { projectStore } = useStore();\r\n  const {\r\n    loadProjects,\r\n    projectRegistry,\r\n    setPagingParams,\r\n    pagination,\r\n  } = projectStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PaginationPrams(pagination!.currentPage + 1));\r\n    loadProjects().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (projectRegistry.size <= 1) {\r\n      loadProjects();\r\n    }\r\n  }, [loadProjects, projectRegistry, setPagingParams]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Row>\r\n        <Grid.Column width=\"16\">\r\n          <ProjectFilters />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column width=\"16\">\r\n          {projectStore.lodaingInital && !loadingNext ? (\r\n            <>\r\n              <ProjectListItemPlaceholder />\r\n              <ProjectListItemPlaceholder />\r\n            </>\r\n          ) : (\r\n            <InfiniteScroll\r\n              pageStart={0}\r\n              loadMore={handleGetNext}\r\n              hasMore={\r\n                !loadingNext &&\r\n                !!pagination &&\r\n                pagination.currentPage < pagination.totalPages\r\n              }\r\n              initialLoad={false}\r\n            >\r\n              <ProjectList />\r\n            </InfiniteScroll>\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Loader active={loadingNext} />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectDashboard);\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  type?: string;\r\n  label?: string;\r\n}\r\n\r\nconst MyTextInput = (props: Props) => {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}{\" \"}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default MyTextInput;\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst LoginForm = () => {\r\n  const { userStore } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: \"Invalid Email or Password\" }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            textAlign=\"center\"\r\n            as=\"h2\"\r\n            className=\"fa fa-bug\"\r\n            style={{ color: \"#0d324d\" }}\r\n          >\r\n            Login To Bug-Ray\r\n          </Header>\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n          <Button\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n            loading={isSubmitting}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default observer(LoginForm);\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nconst VaidationErrors = ({ errors }: Props) => {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n};\r\n\r\nexport default VaidationErrors;\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport VaidationErrors from \"../errors/VaidationErrors\";\r\n\r\nconst RegisterForm = () => {\r\n  const { userStore } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        displayName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header\r\n            textAlign=\"center\"\r\n            as=\"h2\"\r\n            className=\"fa fa-bug\"\r\n            style={{ color: \"#0d324d\" }}\r\n          >\r\n            Sign Up for Bug-Ray\r\n          </Header>\r\n          <MyTextInput name=\"displayName\" placeholder=\"Dispaly Name\" />\r\n          <MyTextInput name=\"username\" placeholder=\"User Name\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <VaidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            disabled={!dirty || !isValid || isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n            loading={isSubmitting}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default observer(RegisterForm);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Segment,\r\n  Button,\r\n  Image,\r\n  Header,\r\n  Grid,\r\n} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nconst HomePage = () => {\r\n  const { userStore, modalStore } = useStore();\r\n\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        {userStore.isLoggedIn ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Image\r\n                circular\r\n                as={Link}\r\n                to=\"/projects\"\r\n                size=\"small\"\r\n                src={userStore.user?.image || \"/assets/user.png\"}\r\n                className=\"whiteBoxGlow\"\r\n                bordered\r\n              />\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Header\r\n                as=\"h1\"\r\n                inverted\r\n                content={\"Welcome \" + userStore.user?.displayName}\r\n              />\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Button\r\n                color=\"grey\"\r\n                basic\r\n                inverted\r\n                content=\"Logout\"\r\n                onClick={userStore.logout}\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"massive\"\r\n              inverted\r\n              circular\r\n              icon=\"sign in alternate\"\r\n              className=\"whiteGlow\"\r\n            />\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"massive\"\r\n              inverted\r\n              circular\r\n              icon=\"pencil alternate\"\r\n              className=\"whiteGlow\"\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(HomePage);\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nconst LodingComponet = ({ inverted = true, content = \"Loading\" }: Props) => {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n};\r\n\r\nexport default LodingComponet;\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nconst MyTextArea = (props: Props) => {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}{\" \"}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default MyTextArea;\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\n// Partial keyword makes all the properties of Datepicker optional\r\nconst MyDateInput = (props: Partial<ReactDatePickerProps>) => {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}{\" \"}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default MyDateInput;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LodingComponet from \"../../../app/layout/LodingComponet\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ProjectFormValues } from \"../../../app/models/project\";\r\n\r\nconst ProjectForm = () => {\r\n  const history = useHistory();\r\n  const { projectStore } = useStore();\r\n  const {\r\n    createProject,\r\n    updateProject,\r\n    loadProject,\r\n    lodaingInital,\r\n  } = projectStore;\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n  const [project, setProject] = useState<ProjectFormValues>(\r\n    new ProjectFormValues()\r\n  );\r\n\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string().required(\"Project name is required\"),\r\n    estimate: Yup.string().required(\"Project estimate is required\").nullable(),\r\n    description: Yup.string().required(\"Project description is required\"),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadProject(id).then((project) =>\r\n        setProject(new ProjectFormValues(project))\r\n      );\r\n  }, [id, loadProject]);\r\n\r\n  function handleFormSubmit(project: ProjectFormValues) {\r\n    if (!project.id) {\r\n      let newProject = { ...project, id: uuid() };\r\n      createProject(newProject).then(() =>\r\n        history.push(`/projects/${newProject.id}`)\r\n      );\r\n    } else {\r\n      updateProject(project).then(() =>\r\n        history.push(`/projects/${project.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  if (lodaingInital && id) return <LodingComponet content=\"Loading Project\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Project Details\" sub style={{ color: \"#0d324d\" }} />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={project}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, dirty, isSubmitting }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput placeholder=\"Name\" name=\"name\" />\r\n            <MyTextArea rows={3} placeholder=\"description\" name=\"description\" />\r\n            <MyDateInput\r\n              name=\"estimate\"\r\n              placeholderText=\"Estimate\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            {/* <MySelectInput options={categoryOptions} name=\"category\" placeholder=\"Category\" /> */}\r\n            <Button\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n              disabled={isSubmitting || !isValid || !dirty}\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/projects\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectForm);\r\n","import React from \"react\";\r\nimport { Button, Card, Image } from \"semantic-ui-react\";\r\n\r\nconst EffortListItem = () => {\r\n  return (\r\n    <Card>\r\n      <Card.Content>\r\n        <Image circular floated=\"right\" size=\"mini\" src=\"/assets/user.png\" />\r\n        <Card.Header>Bug/Task</Card.Header>\r\n        <Card.Meta>Assigned To</Card.Meta>\r\n        <Card.Description>Bug/Task Description</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div className=\"ui two buttons\">\r\n          <Button basic color=\"green\">\r\n            Select\r\n          </Button>\r\n          <Button basic color=\"red\">\r\n            Delete\r\n          </Button>\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EffortListItem;\r\n","import React, { Fragment } from \"react\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport EffortListItem from \"./EffortListItem\";\r\n\r\nconst EffortList = () => {\r\n  return (\r\n    <Fragment>\r\n      <Card.Group itemsPerRow={5}>\r\n        <EffortListItem />\r\n        <EffortListItem />\r\n      </Card.Group>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EffortList;\r\n","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Comment, Grid, Header, Loader, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n  projectId: string;\r\n}\r\n\r\nconst ProjectComments = ({ projectId }: Props) => {\r\n  const { discussionStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (projectId) {\r\n      discussionStore.createHubConnection(projectId);\r\n    }\r\n    return () => {\r\n      discussionStore.clearDiscussion();\r\n    };\r\n  }, [discussionStore, projectId]);\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Grid>\r\n          <Grid.Row centered>\r\n            <Header>Discussions</Header>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment secondary fluid=\"true\">\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Comment.Group\r\n                style={{ margin: \"10px\", padding: \"10px\", width: \"inherit\" }}\r\n              >\r\n                {discussionStore.discssions.map((discussion) => (\r\n                  <Segment\r\n                    key={discussion.id}\r\n                    tertiary={discussion.username === userStore.user?.username}\r\n                    color={\r\n                      discussion.username === userStore.user?.username\r\n                        ? \"green\"\r\n                        : undefined\r\n                    }\r\n                  >\r\n                    <Comment>\r\n                      <Comment.Avatar\r\n                        as=\"a\"\r\n                        src={discussion.image || \"/assets/user.png\"}\r\n                      />\r\n                      <Comment.Content>\r\n                        <Comment.Author\r\n                          as={Link}\r\n                          to={`/profiles/${discussion.username}`}\r\n                        >\r\n                          {discussion.displayName}\r\n                        </Comment.Author>\r\n                        <Comment.Metadata>\r\n                          <div>\r\n                            {\" \"}\r\n                            {formatDistanceToNow(discussion.createdAt) + \" ago\"}\r\n                          </div>\r\n                        </Comment.Metadata>\r\n                        <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                          {discussion.body}\r\n                        </Comment.Text>\r\n                      </Comment.Content>\r\n                    </Comment>\r\n                  </Segment>\r\n                ))}\r\n\r\n                <Formik\r\n                  onSubmit={(values, { resetForm }) =>\r\n                    discussionStore\r\n                      .addDiscussion(values)\r\n                      .then(() => resetForm())\r\n                  }\r\n                  initialValues={{ body: \"\" }}\r\n                  validationSchema={Yup.object({\r\n                    body: Yup.string().required(),\r\n                  })}\r\n                >\r\n                  {({ isSubmitting, isValid, handleSubmit }) => (\r\n                    <Form className=\"ui form\">\r\n                      <Field name=\"body\">\r\n                        {(porps: FieldProps) => (\r\n                          <div style={{ position: \"relative\" }}>\r\n                            <Loader active={isSubmitting} />\r\n                            <textarea\r\n                              style={{ width: \"100%\" }}\r\n                              placeholder=\"Add (Enter to Submit, SHIFT + Enter for new line)\"\r\n                              rows={2}\r\n                              {...porps.field}\r\n                              onKeyPress={(e) => {\r\n                                if (e.key === \"Enter\" && e.shiftKey) {\r\n                                  return;\r\n                                }\r\n                                if (e.key === \"Enter\" && !e.shiftKey) {\r\n                                  e.preventDefault();\r\n                                  isValid && handleSubmit();\r\n                                }\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        )}\r\n                      </Field>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </Comment.Group>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectComments);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  contributors: Profile[];\r\n}\r\n\r\n// Orange Halo for Host\r\nconst ProjectSidebar = ({ contributors }: Props) => {\r\n  return (\r\n    <List horizontal>\r\n      {contributors.map((contributor) => (\r\n        <Popup\r\n          size=\"mini\"\r\n          key={contributor.username}\r\n          hoverable\r\n          trigger={\r\n            <List.Item\r\n              key={contributor.username}\r\n              as={Link}\r\n              to={`/profile/${contributor.username}`}\r\n            >\r\n              <Image\r\n                className={contributor.tracking ? \"blueGlow\" : \"\"}\r\n                size=\"mini\"\r\n                circular\r\n                src={contributor.image || \"/assets/user.png\"}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={contributor} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ProjectSidebar;\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Button, Image } from \"semantic-ui-react\";\r\nimport { Project } from \"../../../app/models/project\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ProjectSidebar from \"./ProjectSidebar\";\r\n\r\ninterface Props {\r\n  project: Project;\r\n}\r\n\r\nconst ProjectDetailItem = ({ project }: Props) => {\r\n  const {\r\n    projectStore: { updateContribution, loading, cancelProjectToggle },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Card fluid className={project.isCancelled ? \"redGlow\" : \"\"}>\r\n      <Card.Content>\r\n        <Image\r\n          circular\r\n          floated=\"right\"\r\n          size=\"mini\"\r\n          src={project.owner?.image || \"/assets/user.png\"}\r\n        />\r\n        {/* {project.isCancelled && (\r\n          <Label\r\n            attached=\"top\"\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )} */}\r\n        <Card.Header>{project.name}</Card.Header>\r\n        <Card.Meta>\r\n          <span className=\"date\">\r\n            Active Since {format(project.estimate!, \"dd MMM yyyy\")}\r\n          </span>\r\n        </Card.Meta>\r\n        <Card.Description>{project.description}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <ProjectSidebar contributors={project.contributors!} />\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        {project.isOwner ? (\r\n          <>\r\n            <Button\r\n              color={project.isCancelled ? \"green\" : \"red\"}\r\n              basic\r\n              floated=\"left\"\r\n              content={\r\n                project.isCancelled ? \"Re-Activate Project\" : \"Cancel Project\"\r\n              }\r\n              onClick={cancelProjectToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to={`/manage/${project.id}`}\r\n              floated=\"right\"\r\n              color=\"blue\"\r\n              content=\"Edit\"\r\n              disabled={project.isCancelled}\r\n            />\r\n          </>\r\n        ) : project.isContributing ? (\r\n          <Button\r\n            floated=\"right\"\r\n            color=\"red\"\r\n            onClick={updateContribution}\r\n            loading={loading}\r\n            content=\"Cancel\"\r\n          />\r\n        ) : (\r\n          <Button\r\n            floated=\"left\"\r\n            color=\"orange\"\r\n            onClick={updateContribution}\r\n            loading={loading}\r\n            content=\"Contribute\"\r\n            disabled={project.isCancelled}\r\n          />\r\n        )}\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectDetailItem);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LodingComponet from \"../../../app/layout/LodingComponet\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport EffortList from \"../effort/EffortList\";\r\nimport ProjectComments from \"./ProjectComments\";\r\nimport ProjectDetailItem from \"./ProjectDetailItem\";\r\n\r\nconst ProjectDetail = () => {\r\n  const { projectStore } = useStore();\r\n  const {\r\n    selectedProject: project,\r\n    loadProject,\r\n    lodaingInital,\r\n    clearSelectedProject,\r\n  } = projectStore;\r\n\r\n  //Extracting value form URL (UsePrams is hook form React-Rocuter-Dom)\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  //Use Extracted Id from URL to load the data on load of page\r\n  useEffect(() => {\r\n    if (id) loadProject(id);\r\n    return () => clearSelectedProject();\r\n  }, [loadProject, id, clearSelectedProject]);\r\n\r\n  if (lodaingInital || !project) return <LodingComponet />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Row>\r\n        <Grid.Column width=\"16\">\r\n          <ProjectDetailItem project={project} />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n\r\n      <Grid.Row>\r\n        <Grid.Column width=\"16\">\r\n          <EffortList />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n\r\n      <Grid.Row>\r\n        <Grid.Column width=\"10\">\r\n          <ProjectComments projectId={project.id} />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ProjectDetail);\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport VaidationErrors from \"./VaidationErrors\";\r\n\r\nexport default function TestError() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorised\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios\r\n      .get(baseUrl + \"project/notaguid\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"project\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <VaidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Nothing like this exists in the application\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/projects\" primary>\r\n          {\" \"}\r\n          Return to Projects\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst ServerError = () => {\r\n  const { commonStore } = useStore();\r\n\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack Trace\" style={{ color: \"#0d324d\" }} />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default observer(ServerError);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nconst ModalContainer = () => {\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModal}\r\n      size=\"mini\"\r\n    >\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ModalContainer);\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoUploadDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dxActive = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dxActive } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport { Cropper } from \"react-cropper\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\n// initalAspectRatio and aspectRatio when set to 1 it forces a square image\r\nconst PhotoUploadCropper = ({ setCropper, imagePreview }: Props) => {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".image-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PhotoUploadCropper;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoUploadDropzone from \"./PhotoUploadDropzone\";\r\nimport PhotoUploadCropper from \"./PhotoUploadCropper\";\r\n\r\ninterface Props {\r\n  handlePhotoUpload: (file: Blob) => void;\r\n  uploading: boolean;\r\n}\r\n\r\nconst PhotoUploadWidget = ({ handlePhotoUpload, uploading }: Props) => {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => handlePhotoUpload(blob!));\r\n    }\r\n  }\r\n\r\n  //Despose the preview object\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub content=\"Step 1 - Add Photo\" />\r\n        <PhotoUploadDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub content=\"Step 2 - Resize\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoUploadCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub content=\"Step 3 - Preview\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"image-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                loading={uploading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                disabled={uploading}\r\n                onClick={() => setFiles([])}\r\n                negative\r\n                icon=\"close\"\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PhotoUploadWidget;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfilePhoto = ({ profile }: Props) => {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      setMainPhoto,\r\n      loading,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              handlePhotoUpload={handlePhotoUpload}\r\n              uploading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photos) => (\r\n                <Card key={photos.id}>\r\n                  <Image src={photos.url || \"/assets/user.png\"} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        icon=\"user circle\"\r\n                        name={\"main\" + photos.id}\r\n                        disabled={photos.isMain}\r\n                        loading={target === \"main\" + photos.id && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photos, e)}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        name={\"delete\" + photos.id}\r\n                        disabled={photos.isMain}\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        loading={target === \"delete\" + photos.id && loading}\r\n                        onClick={(e) => handleDeletePhoto(photos, e)}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePhoto);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { format } from \"date-fns\";\r\nimport React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TabProps, Tab, Grid, Header, Card } from \"semantic-ui-react\";\r\nimport { UserProjects } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst ProfileProjects = () => {\r\n  const panes = [\r\n    { menuItem: \"All\", pane: { key: \"all\" } },\r\n    { menuItem: \"Contributions\", pane: { key: \"Contribution\" } },\r\n    { menuItem: \"Owned\", pane: { key: \"Owned\" } },\r\n  ];\r\n\r\n  const { profileStore } = useStore();\r\n  const {\r\n    loadUserProjects,\r\n    profile,\r\n    loadingProjects,\r\n    userProjects,\r\n  } = profileStore;\r\n  useEffect(() => {\r\n    loadUserProjects(profile!.username);\r\n  }, [loadUserProjects, profile]);\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserProjects(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n  return (\r\n    <Tab.Pane loading={loadingProjects}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Projects\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userProjects.map((project: UserProjects) => (\r\n              <Card as={Link} to={`/projects/${project.id}`} key={project.id}>\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{project.name}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(project.estimate), \"do LLL\")}</div>\r\n                    <div>{format(new Date(project.estimate), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileProjects);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nconst ProfileTrackings = () => {\r\n  const { profileStore } = useStore();\r\n  const { profile, trackings, loadingTrackings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingTrackings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 2\r\n                ? `Users Tracking ${profile?.displayName}`\r\n                : `Users ${profile?.displayName} is Tracking `\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {trackings.map((track) => (\r\n              <ProfileCard key={track?.username} profile={track!} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileTrackings);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport ProfileProjects from \"./ProfileProjects\";\r\nimport ProfileTrackings from \"./ProfileTrackings\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfileContent = ({ profile }: Props) => {\r\n  const panes = [\r\n    { menuItem: \"About\", render: () => <ProfileAbout /> },\r\n    { menuItem: \"Photos\", render: () => <ProfilePhoto profile={profile} /> },\r\n    { menuItem: \"Projects\", render: () => <ProfileProjects /> },\r\n    {\r\n      menuItem: \"User Tracked By\",\r\n      render: () => <ProfileTrackings />,\r\n    },\r\n    {\r\n      menuItem: \"User Tracks\",\r\n      render: () => <ProfileTrackings />,\r\n    },\r\n  ];\r\n\r\n  const { profileStore } = useStore();\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(ProfileContent);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport TrackButton from \"./TrackButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfileHeader = ({ profile }: Props) => {\r\n  // console.log(profile);\r\n\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Row centered>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                bordered\r\n                circular\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Row>\r\n        <Grid.Row centered>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Row>\r\n        <Divider />\r\n        <Grid.Row>\r\n          <Grid.Column width={5}>\r\n            <Statistic.Group widths={2}>\r\n              <Statistic>\r\n                <Statistic.Value>{profile.trackingCount}</Statistic.Value>\r\n                <Statistic.Label>Trackers</Statistic.Label>\r\n              </Statistic>\r\n              <Statistic>\r\n                <Statistic.Value>{profile.trackedCount}</Statistic.Value>\r\n                <Statistic.Label>Tracking</Statistic.Label>\r\n              </Statistic>\r\n            </Statistic.Group>\r\n            <Divider />\r\n            <TrackButton profile={profile} />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileHeader);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LodingComponet from \"../../app/layout/LodingComponet\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nconst ProfilePage = () => {\r\n  //getting values form  Route params\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LodingComponet content=\"Loading Profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePage);\r\n","import React from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }: Props) => {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport Navbar from \"./Navbar\";\nimport ProjectDashboard from \"../../features/project/dashboard/ProjectDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ProjectForm from \"../../features/project/form/ProjectForm\";\nimport ProjectDetail from \"../../features/project/detail/ProjectDetail\";\nimport TestError from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LodingComponet from \"./LodingComponet\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  //To Reset the form key is passed, when the key chnages the form resets in that way we maintain edit and create form.\n  // location object has a unique key value to help us out.\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded) return <LodingComponet content=\"Loading App\" />;\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <Navbar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/projects\"\n                  component={ProjectDashboard}\n                />\n                <PrivateRoute path=\"/projects/:id\" component={ProjectDetail} />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createProject\", \"/manage/:id\"]}\n                  component={ProjectForm}\n                />\n                <PrivateRoute\n                  path=\"/profile/:username\"\n                  component={ProfilePage}\n                />\n                <PrivateRoute path=\"/errors\" component={TestError} />\n                <Route path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\nimport { Router } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\n// To make history object avilable to store and other places in application\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    {/* Using \"Router\" insted of \"BrowserRouter\" would require history object to be passed manually to be available in react application,  */}\n    {/* in this way history object is available thougout the application */}\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}